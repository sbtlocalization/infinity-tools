// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

package parser

import (
	"github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"
	"bytes"
)


/**
 * @see <a href="https://gibberlings3.github.io/iesdp/file_formats/ie_formats/eff_v2.htm
 * ">Source</a>
 */
type Eff struct {
	Magic []byte
	Version []byte
	Body *Eff_Body
	_io *kaitai.Stream
	_root *Eff
	_parent kaitai.Struct
}
func NewEff() *Eff {
	return &Eff{
	}
}

func (this Eff) IO_() *kaitai.Stream {
	return this._io
}

func (this *Eff) Read(io *kaitai.Stream, parent kaitai.Struct, root *Eff) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp1, err := this._io.ReadBytes(int(4))
	if err != nil {
		return err
	}
	tmp1 = tmp1
	this.Magic = tmp1
	if !(bytes.Equal(this.Magic, []uint8{69, 70, 70, 32})) {
		return kaitai.NewValidationNotEqualError([]uint8{69, 70, 70, 32}, this.Magic, this._io, "/seq/0")
	}
	tmp2, err := this._io.ReadBytes(int(4))
	if err != nil {
		return err
	}
	tmp2 = tmp2
	this.Version = tmp2
	if !(bytes.Equal(this.Version, []uint8{86, 50, 46, 48})) {
		return kaitai.NewValidationNotEqualError([]uint8{86, 50, 46, 48}, this.Version, this._io, "/seq/1")
	}
	tmp3 := NewEff_Body(false)
	err = tmp3.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Body = tmp3
	return err
}

type Eff_Body_ParentResourceType int
const (
	Eff_Body_ParentResourceType__None Eff_Body_ParentResourceType = 0
	Eff_Body_ParentResourceType__Spell Eff_Body_ParentResourceType = 1
	Eff_Body_ParentResourceType__Item Eff_Body_ParentResourceType = 2
)
var values_Eff_Body_ParentResourceType = map[Eff_Body_ParentResourceType]struct{}{0: {}, 1: {}, 2: {}}
func (v Eff_Body_ParentResourceType) isDefined() bool {
	_, ok := values_Eff_Body_ParentResourceType[v]
	return ok
}

type Eff_Body_TargetType int
const (
	Eff_Body_TargetType__None Eff_Body_TargetType = 0
	Eff_Body_TargetType__Self Eff_Body_TargetType = 1
	Eff_Body_TargetType__ProjectileTarget Eff_Body_TargetType = 2
	Eff_Body_TargetType__Party Eff_Body_TargetType = 3
	Eff_Body_TargetType__Everyone Eff_Body_TargetType = 4
	Eff_Body_TargetType__EveryoneButParty Eff_Body_TargetType = 5
	Eff_Body_TargetType__CasterGroup Eff_Body_TargetType = 6
	Eff_Body_TargetType__TargetGroup Eff_Body_TargetType = 7
	Eff_Body_TargetType__EveryoneButSelf Eff_Body_TargetType = 8
	Eff_Body_TargetType__OriginalCaster Eff_Body_TargetType = 9
)
var values_Eff_Body_TargetType = map[Eff_Body_TargetType]struct{}{0: {}, 1: {}, 2: {}, 3: {}, 4: {}, 5: {}, 6: {}, 7: {}, 8: {}, 9: {}}
func (v Eff_Body_TargetType) isDefined() bool {
	_, ok := values_Eff_Body_TargetType[v]
	return ok
}

type Eff_Body_TimingMode int
const (
	Eff_Body_TimingMode__InstantLimited Eff_Body_TimingMode = 0
	Eff_Body_TimingMode__InstantPermanentUntilDeath Eff_Body_TimingMode = 1
	Eff_Body_TimingMode__InstantWhileEquipped Eff_Body_TimingMode = 2
	Eff_Body_TimingMode__DelayLimited Eff_Body_TimingMode = 3
	Eff_Body_TimingMode__DelayPermanent Eff_Body_TimingMode = 4
	Eff_Body_TimingMode__DelayWhileEquipped Eff_Body_TimingMode = 5
	Eff_Body_TimingMode__LimitedAfterDuration Eff_Body_TimingMode = 6
	Eff_Body_TimingMode__PermanentAfterDuration Eff_Body_TimingMode = 7
	Eff_Body_TimingMode__EquippedAfterDuration Eff_Body_TimingMode = 8
	Eff_Body_TimingMode__InstantPermanent Eff_Body_TimingMode = 9
	Eff_Body_TimingMode__InstantLimitedTicks Eff_Body_TimingMode = 10
	Eff_Body_TimingMode__AbsoluteDuration Eff_Body_TimingMode = 4096
)
var values_Eff_Body_TimingMode = map[Eff_Body_TimingMode]struct{}{0: {}, 1: {}, 2: {}, 3: {}, 4: {}, 5: {}, 6: {}, 7: {}, 8: {}, 9: {}, 10: {}, 4096: {}}
func (v Eff_Body_TimingMode) isDefined() bool {
	_, ok := values_Eff_Body_TimingMode[v]
	return ok
}
type Eff_Body struct {
	Magic []byte
	Version []byte
	Magic2 []byte
	Version2 []byte
	Opcode uint32
	TargetType Eff_Body_TargetType
	Power uint32
	Parameter1 uint32
	Parameter2 uint32
	TimingMode Eff_Body_TimingMode
	_unnamed10 uint16
	Duration uint32
	Probability1 uint16
	Probability2 uint16
	ResName string
	DiceThrown uint32
	DiceSides uint32
	SavingThrowType *Eff_Body_SavingThrowType
	SaveBonus uint32
	Special uint32
	PrimaryType uint32
	Reserved uint32
	ParentResourceLowestAffectedLevel uint32
	ParentResourceHighestAffectedLevel uint32
	DispelResistance *Eff_Body_DispelResistance
	Parameter3 uint32
	Parameter4 uint32
	Parameter5 uint32
	TimeApplied uint32
	ResName2 string
	ResName3 string
	CasterCoordinate *Eff_Body_Coord
	TargetCoordinate *Eff_Body_Coord
	ParentResourceType Eff_Body_ParentResourceType
	ParentResource string
	ParentResourceFlags *Eff_Body_ParentResourceFlags
	Projectile uint32
	ParentResourceSlot uint32
	VariableName string
	CasterLevel uint32
	FirstApply uint32
	SecondaryType uint32
	_unnamed42 []byte
	Embedded bool
	_io *kaitai.Stream
	_root *Eff
	_parent *Eff
	_raw_SavingThrowType []byte
	_raw_DispelResistance []byte
	_raw_ParentResourceFlags []byte
}
func NewEff_Body(embedded bool) *Eff_Body {
	return &Eff_Body{
		Embedded: embedded,
	}
}

func (this Eff_Body) IO_() *kaitai.Stream {
	return this._io
}

func (this *Eff_Body) Read(io *kaitai.Stream, parent *Eff, root *Eff) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	if (!(this.Embedded)) {
		tmp4, err := this._io.ReadBytes(int(4))
		if err != nil {
			return err
		}
		tmp4 = tmp4
		this.Magic = tmp4
		if !(bytes.Equal(this.Magic, []uint8{69, 70, 70, 32})) {
			return kaitai.NewValidationNotEqualError([]uint8{69, 70, 70, 32}, this.Magic, this._io, "/types/body/seq/0")
		}
	}
	if (!(this.Embedded)) {
		tmp5, err := this._io.ReadBytes(int(4))
		if err != nil {
			return err
		}
		tmp5 = tmp5
		this.Version = tmp5
		if !(bytes.Equal(this.Version, []uint8{86, 50, 46, 48})) {
			return kaitai.NewValidationNotEqualError([]uint8{86, 50, 46, 48}, this.Version, this._io, "/types/body/seq/1")
		}
	}
	if (this.Embedded) {
		tmp6, err := this._io.ReadBytes(int(4))
		if err != nil {
			return err
		}
		tmp6 = tmp6
		this.Magic2 = tmp6
		if !(bytes.Equal(this.Magic2, []uint8{0, 0, 0, 0})) {
			return kaitai.NewValidationNotEqualError([]uint8{0, 0, 0, 0}, this.Magic2, this._io, "/types/body/seq/2")
		}
	}
	if (this.Embedded) {
		tmp7, err := this._io.ReadBytes(int(4))
		if err != nil {
			return err
		}
		tmp7 = tmp7
		this.Version2 = tmp7
		if !(bytes.Equal(this.Version2, []uint8{0, 0, 0, 0})) {
			return kaitai.NewValidationNotEqualError([]uint8{0, 0, 0, 0}, this.Version2, this._io, "/types/body/seq/3")
		}
	}
	tmp8, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.Opcode = uint32(tmp8)
	tmp9, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.TargetType = Eff_Body_TargetType(tmp9)
	tmp10, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.Power = uint32(tmp10)
	tmp11, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.Parameter1 = uint32(tmp11)
	tmp12, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.Parameter2 = uint32(tmp12)
	tmp13, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.TimingMode = Eff_Body_TimingMode(tmp13)
	tmp14, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this._unnamed10 = tmp14
	tmp15, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.Duration = uint32(tmp15)
	tmp16, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.Probability1 = uint16(tmp16)
	tmp17, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.Probability2 = uint16(tmp17)
	tmp18, err := this._io.ReadBytes(int(8))
	if err != nil {
		return err
	}
	tmp18 = kaitai.BytesTerminate(tmp18, 0, false)
	this.ResName = string(tmp18)
	tmp19, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.DiceThrown = uint32(tmp19)
	tmp20, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.DiceSides = uint32(tmp20)
	tmp21, err := this._io.ReadBytes(int(4))
	if err != nil {
		return err
	}
	tmp21 = tmp21
	this._raw_SavingThrowType = tmp21
	_io__raw_SavingThrowType := kaitai.NewStream(bytes.NewReader(this._raw_SavingThrowType))
	tmp22 := NewEff_Body_SavingThrowType()
	err = tmp22.Read(_io__raw_SavingThrowType, this, this._root)
	if err != nil {
		return err
	}
	this.SavingThrowType = tmp22
	tmp23, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.SaveBonus = uint32(tmp23)
	tmp24, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.Special = uint32(tmp24)
	tmp25, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.PrimaryType = uint32(tmp25)
	tmp26, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.Reserved = uint32(tmp26)
	tmp27, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.ParentResourceLowestAffectedLevel = uint32(tmp27)
	tmp28, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.ParentResourceHighestAffectedLevel = uint32(tmp28)
	tmp29, err := this._io.ReadBytes(int(4))
	if err != nil {
		return err
	}
	tmp29 = tmp29
	this._raw_DispelResistance = tmp29
	_io__raw_DispelResistance := kaitai.NewStream(bytes.NewReader(this._raw_DispelResistance))
	tmp30 := NewEff_Body_DispelResistance()
	err = tmp30.Read(_io__raw_DispelResistance, this, this._root)
	if err != nil {
		return err
	}
	this.DispelResistance = tmp30
	tmp31, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.Parameter3 = uint32(tmp31)
	tmp32, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.Parameter4 = uint32(tmp32)
	tmp33, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.Parameter5 = uint32(tmp33)
	tmp34, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.TimeApplied = uint32(tmp34)
	tmp35, err := this._io.ReadBytes(int(8))
	if err != nil {
		return err
	}
	tmp35 = kaitai.BytesTerminate(tmp35, 0, false)
	this.ResName2 = string(tmp35)
	tmp36, err := this._io.ReadBytes(int(8))
	if err != nil {
		return err
	}
	tmp36 = kaitai.BytesTerminate(tmp36, 0, false)
	this.ResName3 = string(tmp36)
	tmp37 := NewEff_Body_Coord()
	err = tmp37.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.CasterCoordinate = tmp37
	tmp38 := NewEff_Body_Coord()
	err = tmp38.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.TargetCoordinate = tmp38
	tmp39, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.ParentResourceType = Eff_Body_ParentResourceType(tmp39)
	tmp40, err := this._io.ReadBytes(int(8))
	if err != nil {
		return err
	}
	tmp40 = kaitai.BytesTerminate(tmp40, 0, false)
	this.ParentResource = string(tmp40)
	tmp41, err := this._io.ReadBytes(int(4))
	if err != nil {
		return err
	}
	tmp41 = tmp41
	this._raw_ParentResourceFlags = tmp41
	_io__raw_ParentResourceFlags := kaitai.NewStream(bytes.NewReader(this._raw_ParentResourceFlags))
	tmp42 := NewEff_Body_ParentResourceFlags()
	err = tmp42.Read(_io__raw_ParentResourceFlags, this, this._root)
	if err != nil {
		return err
	}
	this.ParentResourceFlags = tmp42
	tmp43, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.Projectile = uint32(tmp43)
	tmp44, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.ParentResourceSlot = uint32(tmp44)
	tmp45, err := this._io.ReadBytes(int(32))
	if err != nil {
		return err
	}
	tmp45 = kaitai.BytesTerminate(tmp45, 0, false)
	this.VariableName = string(tmp45)
	tmp46, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.CasterLevel = uint32(tmp46)
	tmp47, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.FirstApply = uint32(tmp47)
	tmp48, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.SecondaryType = uint32(tmp48)
	tmp49, err := this._io.ReadBytes(int(4 * 15))
	if err != nil {
		return err
	}
	tmp49 = tmp49
	this._unnamed42 = tmp49
	return err
}

/**
 * See `MSCHOOL.2DA`.
 */

/**
 * `VCC` in many effects.
 */

/**
 * See `MSECTYPE.2DA`.
 */
type Eff_Body_Coord struct {
	X uint32
	Y uint32
	_io *kaitai.Stream
	_root *Eff
	_parent *Eff_Body
}
func NewEff_Body_Coord() *Eff_Body_Coord {
	return &Eff_Body_Coord{
	}
}

func (this Eff_Body_Coord) IO_() *kaitai.Stream {
	return this._io
}

func (this *Eff_Body_Coord) Read(io *kaitai.Stream, parent *Eff_Body, root *Eff) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp50, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.X = uint32(tmp50)
	tmp51, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.Y = uint32(tmp51)
	return err
}
type Eff_Body_DispelResistance struct {
	Dispel bool
	BypassResistance bool
	BypassEe bool
	SelfTargeted bool
	_unnamed4 uint64
	EffectAppliedByIte bool
	_io *kaitai.Stream
	_root *Eff
	_parent *Eff_Body
}
func NewEff_Body_DispelResistance() *Eff_Body_DispelResistance {
	return &Eff_Body_DispelResistance{
	}
}

func (this Eff_Body_DispelResistance) IO_() *kaitai.Stream {
	return this._io
}

func (this *Eff_Body_DispelResistance) Read(io *kaitai.Stream, parent *Eff_Body, root *Eff) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp52, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Dispel = tmp52 != 0
	tmp53, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.BypassResistance = tmp53 != 0
	tmp54, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.BypassEe = tmp54 != 0
	tmp55, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.SelfTargeted = tmp55 != 0
	tmp56, err := this._io.ReadBitsIntLe(27)
	if err != nil {
		return err
	}
	this._unnamed4 = tmp56
	tmp57, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.EffectAppliedByIte = tmp57 != 0
	return err
}
type Eff_Body_ParentResourceFlags struct {
	_unnamed0 uint64
	Hostile bool
	NoLosRequired bool
	AllowSpotting bool
	OutdoorsOnly bool
	NonMagicalAbility bool
	IgnoreWildSurge bool
	NonCombatAbility bool
	_io *kaitai.Stream
	_root *Eff
	_parent *Eff_Body
}
func NewEff_Body_ParentResourceFlags() *Eff_Body_ParentResourceFlags {
	return &Eff_Body_ParentResourceFlags{
	}
}

func (this Eff_Body_ParentResourceFlags) IO_() *kaitai.Stream {
	return this._io
}

func (this *Eff_Body_ParentResourceFlags) Read(io *kaitai.Stream, parent *Eff_Body, root *Eff) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp58, err := this._io.ReadBitsIntLe(10)
	if err != nil {
		return err
	}
	this._unnamed0 = tmp58
	tmp59, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Hostile = tmp59 != 0
	tmp60, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.NoLosRequired = tmp60 != 0
	tmp61, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.AllowSpotting = tmp61 != 0
	tmp62, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.OutdoorsOnly = tmp62 != 0
	tmp63, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.NonMagicalAbility = tmp63 != 0
	tmp64, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.IgnoreWildSurge = tmp64 != 0
	tmp65, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.NonCombatAbility = tmp65 != 0
	return err
}
type Eff_Body_SavingThrowType struct {
	Spells bool
	Breath bool
	ParalyzePoisonDeath bool
	Wands bool
	PetrifyPolymorph bool
	EeSpells bool
	EeBreath bool
	EeParalyzePoisonDeath bool
	EeWands bool
	EePetrifyPolymorph bool
	IgnorePrimaryTarget bool
	IgnoreSecondaryTarget bool
	BypassMirrorImage bool
	IgnoreDifficulty bool
	Reserved bool
	_io *kaitai.Stream
	_root *Eff
	_parent *Eff_Body
}
func NewEff_Body_SavingThrowType() *Eff_Body_SavingThrowType {
	return &Eff_Body_SavingThrowType{
	}
}

func (this Eff_Body_SavingThrowType) IO_() *kaitai.Stream {
	return this._io
}

func (this *Eff_Body_SavingThrowType) Read(io *kaitai.Stream, parent *Eff_Body, root *Eff) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp66, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Spells = tmp66 != 0
	tmp67, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Breath = tmp67 != 0
	tmp68, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.ParalyzePoisonDeath = tmp68 != 0
	tmp69, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Wands = tmp69 != 0
	tmp70, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.PetrifyPolymorph = tmp70 != 0
	tmp71, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.EeSpells = tmp71 != 0
	tmp72, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.EeBreath = tmp72 != 0
	tmp73, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.EeParalyzePoisonDeath = tmp73 != 0
	tmp74, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.EeWands = tmp74 != 0
	tmp75, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.EePetrifyPolymorph = tmp75 != 0
	tmp76, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.IgnorePrimaryTarget = tmp76 != 0
	tmp77, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.IgnoreSecondaryTarget = tmp77 != 0
	tmp78, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.BypassMirrorImage = tmp78 != 0
	tmp79, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.IgnoreDifficulty = tmp79 != 0
	tmp80, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Reserved = tmp80 != 0
	return err
}
